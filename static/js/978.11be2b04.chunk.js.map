{"version":3,"file":"static/js/978.11be2b04.chunk.js","mappings":"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","sources":["webpack://questionare/./src/components/common/buttons/buttons.module.css?43c5","components/common/buttons/buttons.tsx","webpack://questionare/./src/components/common/labelTextField/labelLineText.module.css?43aa","components/common/labelTextField/labelLineText.tsx","webpack://questionare/./src/components/login/login.module.css?e6ba","components/login/login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonOk\":\"buttons_buttonOk__Yve+Q\",\"buttonCancel\":\"buttons_buttonCancel__q9INi\"};","import { useSelector } from \"react-redux\";\nimport { DARK, LIGHT } from \"../../../hooks/useTheme\";\nimport { RootState } from \"../../../store/store\";\nimport s from \"./buttons.module.css\";\n\ntype ButtonPropsType = {\n    text: string,\n    onClickFunction: () => void,\n    className?: string\n}\n\nexport const ButtonOK = (props: ButtonPropsType) => {\n    return <button\n        onClick={props.onClickFunction}\n        className={s.buttonOk + \" \" + props.className}\n        // autoFocus={true}\n    >\n        {props.text}\n    </button>\n}\n\nexport const ButtonCancel = (props: ButtonPropsType) => {\n    return <button\n        onClick={props.onClickFunction}\n        className={s.buttonCancel}\n    >\n        {props.text}\n    </button>\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"lineTextDiv\":\"labelLineText_lineTextDiv__VTp64\",\"lineTextDecoration\":\"labelLineText_lineTextDecoration__vf3qZ\",\"error\":\"labelLineText_error__kyQCn\",\"icon\":\"labelLineText_icon__Cq+yk\"};","import { ChangeEvent } from \"react\";\nimport s from \"./labelLineText.module.css\";\n\ntype LineTextFieldPropsType = {\n    type: 'text' | 'password' | 'date',\n    text: string,\n    placeholder?: string | null,\n    error?: boolean,\n    onChangeFunction: (text: string) => void,\n    className?: string,\n    icon?: any,\n    onIconClickFunction?: () => void,\n    autofocus?: boolean\n    onClickFunction?: ()=> void,\n    cursorPosition?: number;\n}\nexport const LineTextField = (props: LineTextFieldPropsType) => {\n\n    const onTextChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const text = e.currentTarget.value;\n        props.onChangeFunction(text)\n    }\n    const onIconClickHandler = () => {\n        if (props.onIconClickFunction) {\n            props.onIconClickFunction();\n        }\n    }\n\n    return <div className={s.lineTextDiv}>\n            <input \n                type={props.type} \n                value={props.text}\n                placeholder={props.placeholder || \"\"}\n                onChange={(e) => onTextChangeHandler(e)}\n                className={ props.error \n                    ? s.lineTextDecoration + \" \" + s.error + \" \" + props.className\n                    : s.lineTextDecoration + \" \" + props.className\n                }\n                autoFocus={props.autofocus}\n                onClick={props.onClickFunction}\n            />\n\n            {\n                props.icon && <img \n                        src={props.icon} \n                        className={s.icon}\n                        onClick={onIconClickHandler}\n                    />\n            }\n\n    </div>\n}","// extracted by mini-css-extract-plugin\nexport default {\"fields\":\"login_fields__eO21b\",\"error_label\":\"login_error_label__9NT7P\",\"inputs_divs\":\"login_inputs_divs__FrAxO\"};","import s from \"./login.module.css\";\nimport { ButtonOK } from '../common/buttons/buttons';\nimport { useSelector } from \"react-redux\";\nimport { RootState, useAppDispatch } from \"../../store/store\";\nimport { onLoginInputAC, onPasswordInputAC, UserIdType } from \"../../store/features/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { LineTextField } from \"../common/labelTextField/labelLineText\";\n\nimport iconUserName from \"../../public/icons/icon_username.png\";\nimport iconPassword from \"../../public/icons/icon_password.png\";\nimport iconEyeOpened from \"../../public/icons/icon_eye_opened.png\";\nimport iconEyeClosed from \"../../public/icons/icon_eye_closed.png\";\nimport { PATHS } from \"../outlet/outlet\";\nimport { loginThunk, loginThunkPropsType } from \"../../store/features/authThunks\";\n\nconst Login = () => {\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n    let navigate = useNavigate();\n\n    const userId:UserIdType = useSelector((state: RootState) => state.auth.userId);\n    const isAuth:boolean = userId ? true : false;\n    useEffect(() => {\n        if (isAuth){\n            return navigate(PATHS.dashboard);\n        }\n        \n    },[isAuth]);\n\n\n    //console.log('Login / Error=', error);\n    const loginInput: string = useSelector((state: RootState) => state.auth.vars.loginInput);\n    const passwordInput: string = useSelector((state: RootState) => state.auth.vars.passwordInput);\n    \n    const loginError:string = useSelector((state: RootState) => state.auth.vars.loginError);\n    const loginRequired:boolean = useSelector((state: RootState) => state.auth.vars.emptyLogin);\n    const passwordRequired:boolean = useSelector((state: RootState) => state.auth.vars.emptyPassword);\n    \n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    const onLoginClickHandler = () => {\n        const credentials:loginThunkPropsType = {\n            username: loginInput,\n            password: passwordInput\n        }\n        dispatch(loginThunk(credentials));\n    }\n    const onLoginChange = (newValue: string) => {\n        dispatch(onLoginInputAC(newValue));\n    }\n    const onPasswordChange = (newValue: string) => {\n        dispatch(onPasswordInputAC(newValue));\n    }\n\n    return <>\n        <div className={s.fields}>\n            <div className={s.inputs_divs}>\n                <h2>{ t(\"login_login\") }</h2>\n                <LineTextField \n                    type=\"text\"\n                    text={loginInput}\n                    placeholder={ t(\"login_login_placeholder\") }\n                    onChangeFunction={onLoginChange}\n                    error={loginError.length > 0 || loginRequired}\n                    icon={iconUserName}\n                    autofocus={true}\n                />\n                { loginRequired && <label className={s.error_label}>{t(\"required_field\")}</label>}\n                {/* <input type={'text'} placeholder=\"\"/> */}\n            </div>\n            <div className={s.inputs_divs}>\n                <h2>{ t(\"login_password\") }</h2>\n                <LineTextField \n                    type={showPassword ? \"text\" : \"password\"}\n                    text={passwordInput}\n                    placeholder={ t(\"login_password_placeholder\") }\n                    onChangeFunction={onPasswordChange}\n                    error={loginError.length > 0 || passwordRequired}\n                    icon={\n                        passwordInput.length > 0 \n                            ? showPassword\n                                ? iconEyeClosed\n                                : iconEyeOpened\n                            : iconPassword\n                    }\n                    onIconClickFunction={() => setShowPassword(!showPassword)}\n                />\n                { passwordRequired && <label className={s.error_label}>{t(\"required_field\")}</label>}\n                {/* <input type={'password'} placeholder=\"\"/> */}\n            </div>\n\n            { loginError.length > 0 && <label className={s.error_label}>{loginError}</label>}\n\n            <ButtonOK \n                text={ t(\"login_button\") }\n                onClickFunction={() => onLoginClickHandler()}\n            />\n        </div>\n    </>\n}\n\nexport default Login;"],"names":["ButtonOK","props","onClick","onClickFunction","className","s","text","ButtonCancel","LineTextField","type","value","placeholder","onChange","e","preventDefault","stopPropagation","currentTarget","onChangeFunction","onTextChangeHandler","error","autoFocus","autofocus","icon","src","onIconClickFunction","t","useTranslation","dispatch","useAppDispatch","navigate","useNavigate","isAuth","useSelector","state","auth","userId","useEffect","PATHS","loginInput","vars","passwordInput","loginError","loginRequired","emptyLogin","passwordRequired","emptyPassword","useState","showPassword","setShowPassword","newValue","onLoginInputAC","length","onPasswordInputAC","credentials","username","password","loginThunk","onLoginClickHandler"],"sourceRoot":""}